const axios = require("axios");
const fs = require("fs");
const path = require("path");

module.exports.config = {
  name: "rule34",
  aliases: ["r34", "r34vid"],
  version: "1.0",
  credits: "ChatGPT & Jehad Joy",
  description: "Rule34 ‡¶•‡ßá‡¶ï‡ßá mp4 ‡¶¨‡¶æ webm ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßá Messenger ‡¶è ‡¶™‡¶æ‡¶†‡¶æ‡¶¨‡ßá",
  commandCategory: "18+",
  usages: "{pn} [‡¶ü‡ßç‡¶Ø‡¶æ‡¶ó]",
  cooldown: 30,
  hasPermssion: 0,
};

module.exports.run = async ({ api, event, args }) => {
  const tag = args.length > 0 ? args.join(" ") : "hentai";
  const filePath = path.join(__dirname, "cache", "6767.mp4");

  try {
    // Step 1: Rule34 API ‡¶•‡ßá‡¶ï‡ßá ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡ßá‡¶ü‡¶æ ‡¶Ü‡¶®‡¶æ
    const response = await axios.get(`https://api.rule34.xxx/index.php`, {
      params: {
        page: "dapi",
        s: "post",
        q: "index",
        tags: tag,
        limit: 100,
        json: 1,
      },
    });

    const posts = response.data;
    if (!posts || posts.length === 0)
      return api.sendMessage(`‚ùå "${tag}" ‡¶ü‡ßç‡¶Ø‡¶æ‡¶ó‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§`, event.threadID);

    // Step 2: mp4 ‡¶¨‡¶æ webm ‡¶´‡¶æ‡¶á‡¶≤ filter ‡¶ï‡¶∞‡¶æ
    const videos = posts.filter(
      (p) =>
        p.file_url &&
        (p.file_url.endsWith(".mp4") || p.file_url.endsWith(".webm"))
    );

    if (videos.length === 0)
      return api.sendMessage(`‚ùå "${tag}" ‡¶ü‡ßç‡¶Ø‡¶æ‡¶ó‡ßá ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§`, event.threadID);

    // Step 3: ‡¶∞‚Äç‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶Æ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü
    const selected = videos[Math.floor(Math.random() * videos.length)];

    // Step 4: ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶°
    const videoRes = await axios.get(selected.file_url, {
      responseType: "arraybuffer",
    });

    fs.writeFileSync(filePath, Buffer.from(videoRes.data));

    // Step 5: ‡¶´‡¶æ‡¶á‡¶≤ ‡¶∏‡¶æ‡¶á‡¶ú ‡¶ö‡ßá‡¶ï (Messenger max ~25MB)
    const sizeMB = fs.statSync(filePath).size / (1024 * 1024);
    if (sizeMB > 25) {
      fs.unlinkSync(filePath);
      return api.sendMessage("‚ùå ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡ß®‡ß´MB ‡¶è‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø, ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶∏‡¶Æ‡ßç‡¶≠‡¶¨ ‡¶®‡ßü‡•§", event.threadID);
    }

    // Step 6: Messenger ‡¶è ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã
    return api.sendMessage(
      {
        body: `üîû Rule34 ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì: ${tag}`,
        attachment: fs.createReadStream(filePath),
      },
      event.threadID,
      () => fs.unlinkSync(filePath),
      event.messageID
    );
  } catch (error) {
    console.error(error);
    return api.sendMessage("‚ùå ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§", event.threadID);
  }
};